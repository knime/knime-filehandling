<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./file_system_connector.png"
		type="Source"
		xmlns="http://knime.org/node/v4.1"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
    <name>HTTP(S) Connector</name>

    <shortDescription>
        Connects to a web server with HTTP(S) in order to read/write files in downstream nodes.
    </shortDescription>

    <fullDescription>
         <intro>
            <p>This node connects to a web server with HTTP(S). The resulting output port allows downstream nodes to read and
            write <i>files</i> on the webserver.
            </p>
            
            <p>
            <b>Note:</b> This connector does not support listing, deleting or moving files/folders, nor is it possible to create folders
            on the webserver. The only operations supported are reading and writing <i>single</i> files. 
            </p>
            
            <p><b>Path syntax:</b> Paths for HTTP(S) in downstram nodes are specified with a UNIX-like syntax, and may be suffixed
            with a query ('?') and or fragment ('#). For example
            <tt>/myfolder/resource?myparam=myvalue#myfragment</tt> is an absolute path that consists of:
                <ol>
                    <li>A leading slash (<tt>/</tt>).</li>
                    <li>The name of a folder (<tt>myfolder</tt>), followed by a slash.</li>
                    <li>Followed by the name of a file/resource (<tt>resource</tt>).</li>
                    <li>Followed by a query (<tt>?myparam=myvalue</tt>).</li>
                    <li>Followed by a fragment (<tt>#myfragment</tt>).</li>
                </ol>
            </p>
        </intro>

        <tab name="Settings">
	        <option name="URL">
	            Base URL that specifies the <i>protocol</i> (<tt>http</tt> or <tt>https</tt>), a <i>host</i>, an optional
	            <i>port</i> as well as an optional <i>path</i>, which will be used as the <i>working directory</i> of the
	            file system connection. The working directory allows downstream nodes to access files using <i>relative</i> paths,
	            i.e. paths that do not have a leading slash. If not specified. If no path is specified in the URL, then the 
	            working directory is assumed to <tt>/</tt>.
	        </option>
	        <option name="Authentication">
	            Method of authentication to use.
	            <ul>
	            	<li>
	            		<b>Basic:</b> Use with the provided <i>Username</i> and <i>Password</i> to authenticate with HTTP Basic authentication.
	            		If entered here, the password is persistently stored (in encrypted form) in the settings of this node. Alternatively,
	            		if <i>Use credentials</i>
	            		is selected, the username and password of the selected credentials flow variable will be used for authentication.
	            	</li>
	            	<li>
	            		<b>None:</b> No authentication will be performed.
	            	</li>
	           	</ul>
	        </option>
	        <option name="Ignore hostname mismatches">
	            If checked, the node trusts the server's SSL certificate even if it was generated for a different host.
	        </option>
	        <option name="Trust all certificates">
	            If checked, the node trusts all certificates regardless of their origin or expiration date.
	        </option>
	    </tab>

        <tab name="Advanced">
		    <option name="Connection timeout">
		        Timeout in seconds to establish a connection or 0 for an infinite timeout. 
		    </option>
		    <option name="Read timeout">
		        Timeout in seconds to read a server response from a connection, or 0 for an infinite timeout. 
		    </option>
	        <option name="Follow redirects">
	            If checked, the node will follow redirects (HTTP status code <tt>3xx</tt>).
	        </option>
		</tab>
    </fullDescription>

    <ports>
   		<outPort index="0" name="HTTP(S) File System Connection">
   			HTTP(S) File System Connection.
   		</outPort>
    </ports>    
</knimeNode>
