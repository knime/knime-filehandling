<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.2"?>

<plugin>
   <extension-point id="mimetypes" name="MIME Type" schema="schema/MIMEType.exsd"/>
   <extension-point id="RemoteFileHandler" name="Remote File Handler" schema="schema/RemoteFileHandler.exsd"/>
   <extension point="org.knime.workbench.repository.nodes">
   <node category-path="/io/filehandling" deprecated="true" factory-class="org.knime.base.filehandling.filemetainfo.FileMetaInfoNodeFactory"/>
   <node category-path="/io/filehandling" factory-class="org.knime.base.filehandling.filemetainfo2.FileMetaInfo2NodeFactory" />
   <node category-path="/io/io-other" factory-class="org.knime.base.filehandling.findmimetype.FindMIMETypeNodeFactory" />
   <node category-path="/io/io-other" factory-class="org.knime.base.filehandling.listmimetypes.ListMIMETypesNodeFactory" />
   <node
         category-path="/io/filehandling/zip"
         factory-class="org.knime.base.filehandling.zip2.ZipNodeFactory"/>
   <node
         category-path="/io/filehandling/zip"
         factory-class="org.knime.base.filehandling.unzip2.UnzipNodeFactory"/>
   <node category-path="/io/io-other/binaryobjects" factory-class="org.knime.base.filehandling.filestobinaryobjects.FilesToBinaryObjectsNodeFactory" />
   <node
         category-path="/io/io-other/binaryobjects"
         deprecated="true"
         factory-class="org.knime.base.filehandling.binaryobjectstofiles.BinaryObjectsToFilesNodeFactory"/>
   <node category-path="/io/io-other/binaryobjects" factory-class="org.knime.base.filehandling.binaryobjectstopngs.BinaryObjectsToPNGsNodeFactory" />
   <node category-path="/io/io-other/binaryobjects" factory-class="org.knime.base.filehandling.pngstobinaryobjects.PNGsToBinaryObjectsNodeFactory" />
   <node category-path="/io/io-other/binaryobjects" factory-class="org.knime.base.filehandling.binaryobjectstostrings.BinaryObjectsToStringsNodeFactory" />
   <node category-path="/io/io-other/binaryobjects" factory-class="org.knime.base.filehandling.stringstobinaryobjects.StringsToBinaryObjectsNodeFactory" />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.stringtouri.StringToURINodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.uritostring.URIToStringNodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.uritoport.URIToPortNodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.porttouri.PortToURINodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.extracturiinfo.ExtractURIInfoNodeFactory"  />
   <node
         category-path="/io/filehandling"
         factory-class="org.knime.base.filehandling.copyfiles.CopyFilesNodeFactory"/>
   <node
         category-path="/io/filehandling/remote/connections"
         factory-class="org.knime.base.filehandling.remote.connectioninformation.node.ftp.FTPConnectionInformationNodeFactory"/>
   <node
         category-path="/io/filehandling/remote/connections"
         factory-class="org.knime.base.filehandling.remote.connectioninformation.node.http.HTTPConnectionInformationNodeFactory"/>
   <node
         category-path="/io/filehandling/remote/connections"
         factory-class="org.knime.base.filehandling.remote.connectioninformation.node.https.HTTPSConnectionInformationNodeFactory"/>
   <node
         category-path="/io/filehandling/remote/connections"
         factory-class="org.knime.base.filehandling.remote.connectioninformation.node.ssh.SSHConnectionInformationNodeFactory"/>
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.upload2.UploadNodeFactory"/>
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.download2.DownloadNodeFactory"/>
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.downloaduploadfromlist2.DownloadUploadFromListNodeFactory"/>
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.uriporttovariable.URIPortToVariableNodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.urltofilepath.UrlToFilePathNodeFactory"  />
   <node category-path="/io/io-other/uri" factory-class="org.knime.base.filehandling.urltofilepathvariable.UrlToFilePathVariableNodeFactory"  />
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.deletefiles.DeleteFilesNodeFactory"/>
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.createdirectory.CreateDirectoryNodeFactory"/>
   <node
         category-path="/io/filehandling/remote"
         factory-class="org.knime.base.filehandling.listdirectory.ListDirectoryNodeFactory"/>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.download.DownloadNodeFactory"
         hidden="false">
   </node>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.downloaduploadfromlist.DownloadUploadFromListNodeFactory"
         hidden="false">
   </node>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.filemetainfo.FileMetaInfoNodeFactory"
         hidden="false">
   </node>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.unzip.UnzipNodeFactory"
         hidden="false">
   </node>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.upload.UploadNodeFactory"
         hidden="false">
   </node>
   <node
         deprecated="true"
         factory-class="org.knime.base.filehandling.zip.ZipNodeFactory"
         hidden="false">
   </node>
   <node
         category-path="/io/io-other/binaryobjects"
         deprecated="false"
         factory-class="org.knime.base.filehandling.binaryobjects.writer.BinaryObjectsToFilesNodeFactory"
         hidden="false">
   </node>
   <node
         category-path="/io/io-other/binaryobjects"
         deprecated="false"
         factory-class="org.knime.base.filehandling.binaryobjects.model.to.port.ModelToBinaryObjectNodeFactory"
         hidden="false">
   </node>
   <node
         category-path="/io/io-other/binaryobjects"
         deprecated="false"
         factory-class="org.knime.base.filehandling.binaryobjects.model.from.port.BinaryObjectsToModelNodeFactory"
         hidden="false">
   </node>
</extension>
   <extension point="org.knime.workbench.repository.categories">
      <category
            after="io-other"
            description="Nodes to handle files"
            icon="icons/cfilehandling16x16.png"
            level-id="filehandling"
            name="File Handling (legacy)"
            path="/io"/>
      <category description="Nodes to handle zip files" icon="icons/czip16x16.png" level-id="zip" name="Zip (legacy)" path="/io/filehandling" />
      <category description="Nodes to handle binary objects" icon="icons/cbinaryobjects16x16.png" level-id="binaryobjects" name="Binary Objects" path="/io/io-other" />
      <category description="Nodes to handle URI conversion" icon="icons/curi16x16.png" level-id="uri" name="URI" path="/io/io-other" />
      <category description="Nodes to handle remote file operations" icon="icons/cremote16x16.png" level-id="remote" name="Remote (legacy)" path="/io/filehandling" />
      <category description="Nodes to create connections for remote file operations" icon="icons/cconnections16x16.png" level-id="connections" name="Connections (legacy)" path="/io/filehandling/remote" />
   </extension>
   <extension
         point="org.knime.base.filehandling.RemoteFileHandler">
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.FileRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.FTPRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.HTTPRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.SCPRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.SFTPRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.SSHRemoteFileHandler">
      </RemoteFileHandler>
      <RemoteFileHandler
            RemoteFileHandler="org.knime.base.filehandling.remote.files.KnimeRemoteFileHandler">
      </RemoteFileHandler>
   </extension>
   <extension
         point="org.knime.core.NodeFactoryClassMapper">
      <NodeFactoryClassMapper
            classMapper="org.knime.base.filehandling.FileHandlingNodeFactoryClassMapper">
      </NodeFactoryClassMapper>
   </extension>
   <extension
         point="org.knime.core.PortType">
      <portType
            color="#7FE1FF"
            name="Remote Connection"
            objectClass="org.knime.base.filehandling.remote.connectioninformation.port.ConnectionInformationPortObject"
            objectSerializer="org.knime.base.filehandling.remote.connectioninformation.port.ConnectionInformationPortObject$Serializer"
            specClass="org.knime.base.filehandling.remote.connectioninformation.port.ConnectionInformationPortObjectSpec"
            specSerializer="org.knime.base.filehandling.remote.connectioninformation.port.ConnectionInformationPortObjectSpec$Serializer">
      </portType>
   </extension>

</plugin>
