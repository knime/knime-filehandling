<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="binaryobjectstofiles16x16.png"
	type="Manipulator" xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1
	http://knime.org/node/v4.1.xsd">
	<name>Binary Objects to Files (Labs)</name>
	<shortDescription>
		 Write the binary objects of a table as files.
	</shortDescription>
	<fullDescription>
		<intro>
			This node writes files from a table with binary objects. It will append the Paths of binary files to the 
			output table and the corresponding Status (created, unmodified, overwritten).
		</intro>
		<option name="Binary object">
			Options for selecting a column with binary data from input table. And whether the original binary column 
			should be included in the output.
			<ul>
				<li>
					<b>Column: </b>
					Column with binary objects.
					<br />
				</li>
				<li>
					<b>Remove column: </b>
					Removes the column with the binary objects from the output table.
				</li>
			</ul>
		</option>
        <option name="File names">
        	Select an option for the binary file names, by default files will be  generated using "File_?.dat" pattern. 
        	There are two options to choose from. 
			<ul>
				<li>
					<b>Generate: </b>
					The names will be generated using a user provided pattern. The pattern should contain "?" symbol 
					which will be replaced with an incrementing number to make the filenames unique.
					<br />
				</li>
				<li>
					<b>From column: </b>
					The file names for output binary files can be found in a column of the input table.
				</li>
			</ul>
        </option>
		<option name="Write to">
			Select a file system which stores the files you want to generate.
			There are three default file system options to choose from:
			<br />
			<ul>
				<li>
					<i>Local File System:</i>
					Allows you to select a file/folder from your
					local system.
				</li>
				<li>
					<i>Mountpoint:</i>
					Allows you to read from a mountpoint.When selected, a new drop-down
					menu appears to choose the mountpoint. Unconnected mountpoints are
					greyed out but can still be selected (note that browsing is
					disabled in this case). Go to the KNIME Explorer and connect to the
					mountpoint to enable browsing. A mountpoint is displayed in red if
					it was previously selected but is no longer available. You won't be
					able to save the dialog as long as you don't select a valid i.e.
					known mountpoint.
				</li>
				<li>
					<i>Relative to:</i>
					Allows you to choose whether to resolve the path
					relative to the
					current mountpoint, current workflow or the current
					workflow's data
					area.
					When selected a new drop-down menu appears to choose which of
					the three
					options to use.
				</li>
			</ul>
		</option>
		<option name="Folder">
			The directory where the files will be put.
		</option>
		<option name="Create missing folders">
			Select if the folders of the selected output location should be created if hey do not already exist.
			If this option is unchecked, the node will fail if a folder does not exist.
		</option>
		<option name="If a folder exists...">
			Specifies the behavior if one of the files already exists.
			<br />
			<b>Overwrite</b>
			<br />
			Overwrite the existing file.
			<br />
			<b>Abort</b>
			<br />
			The nodes execution will be aborted.
			<br />
			<b>Fail</b>
			<br />
			Will issue an error during the node's execution (to prevent unintentional overwrite).
		</option>
	</fullDescription>

    <ports>
        <inPort name="Input table" index="0">
            Table that contains the binary objects that will be written to files. User defined names for binary files 
            can also be used, if they are available in the table.
        </inPort>
        <dynInPort insert-before="0" name="File system connection"
			group-identifier="File System Connection">
			The file system connection.
		</dynInPort>
        <outPort name="Output table" index="0">
            Output table with the Path to binary files and their corresponding Status (created, unmodified, overwritten) 
            for the binary objects in input table.
        </outPort>
    </ports>
</knimeNode>